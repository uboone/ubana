#include "services_microboone.fcl"

BEGIN_PROLOG
END_PROLOG

process_name: muDARfeasibility
source:
{
module_type: RootInput
		     maxEvents:   -1
#inputCommands: [ "keep *", "drop sumdata::RunData_*_*_*" ]
}

services: {

scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
				 TFileService: { fileName: "muDARfeasibility_hist.root" }
			 @table::microboone_services_reco
#@table::microboone_simulation_services
#TPCEnergyCalibService:         @local::microboone_tpcenergycalib_service
#Timing:       {}
#SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
				 RandomNumberGenerator: {}                     #ART native random number generator
				 message:      @local::standard_info
#user:
#{
# BELOW you see a list of the common services! Uncomment the ones you need.
#      ExptGeoHelperInterface:         @local::microboone_geometry_helper
#      Geometry:                       @local::microboone_geo
#     DetectorProperties:             @local::microboone_detproperties
#     LArProperties:                  @local::microboone_properties
#     DatabaseUtil:                   @local::microboone_database
#     TimeService:                    @local::microboone_timeservice
#     SpaceCharge:                    @local::microboone_spacecharge
#     SeedService:                    @local::microboone_seedservice
#    LArFFT:                         @local::microboone_larfft
#    SignalShapingServiceMicroBooNE: @local::microboone_signalshapingservice
#    BackTracker:                    @local::microboone_backtracker
# MemoryPeakReporter: {}
# OpDigiProperties:               @local::microboone_opdigiproperties
#}

	  }

services.SpaceCharge.EnableSimSpatialSCE: true
services.DetectorClocksService.InheritClockConfig:         false
services.DetectorClocksService.TriggerOffsetTPC:           -0.400e3
services.ChannelStatusService.ChannelStatusProvider.UseDB: false
services.message.destinations :
{
STDCOUT:
	{
type:      "cout"      #tells the message service to output this destination to cout
		   threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
#append:     true       #says to append all messages to the output
		   categories:
		   {
ChannelFilter:
			   {
limit: 0
	       reportEvery: 0
			   }
			   default:
			   {
limit: -1  #don't print anything at the infomsg level except the explicitly named categories
	       reportEvery: 1
			   }
		   }
	}
}

physics: {

producers: {
# ParameterSets for zero or more producer modules
	   }
analyzers: {
# ParameterSets for zero or more analyzer modules
#gammacorrelation: @local::gammacorrelation
muDARfeasibility: @local::muDARfeasibility
	   }

filters: {
# ParameterSets for zero or more filter modules
	 }

# analyzeIt:[
#
#           ]
path0: [ muDARfeasibility ]
	       stream: [ out0 ]
#path1 : [  comma separated list of module labels of producer or filter modules  ]
#path2 : [  comma separated list of module labels of analyzer or output modules  ]
#path3 : [  comma separated list of module labels of analyzer or output modules  ]

	       trigger_paths: [ ]
	       end_paths:    [ path0 ]

	 }

outputs.out0: { module_type: RootOutput
	fileName:    "muDARfeasibility_ana.root"
		dataTier:    "ana"
		streamName:  "all"
		SelectEvents: [ path0 ]
		compressionLevel: 1
}

