#include "services_microboone.fcl"
#include "opdetwaveformana.fcl"
process_name: OpDetWaveformAna

services:
{
  TFileService:            { fileName: "pmt_waveform_ana.root" }
  TimeTracker:             {}
  WireReadout:         @local::microboone_wire_readout
  GeometryConfigurationWriter:    {}
  Geometry:                       @local::microboone_geo
  DetectorPropertiesService:      @local::microboone_detproperties
  LArProperties:                  @local::microboone_properties
  DetectorClocksService:          @local::microboone_detectorclocks
  #MemoryTracker:           { ignoreTotal: 1 } # default is one
  RandomNumberGenerator:   {} #ART native random number generator
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
}
services.DetectorPropertiesService.NumberTimeSamples: 6400
services.DetectorPropertiesService.ReadOutWindowSize: 6400
services.DetectorClocksService.InheritClockConfig:       false
services.DetectorClocksService.TriggerOffsetTPC:         -0.400e3
#services.DatabaseUtil.ShouldConnect: false

#source is now a root file                                                                                                                                                          
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create                                                                                                                                
}

physics:
{
 ana:       [ opdetana ]
 end_paths: [ ana ]
}

physics.analyzers.opdetana: @local::OpDetWaveformAna
physics.analyzers.opdetana.InputModule: ["saturation:OpdetBeamHighGain"]
physics.analyzers.opdetana.AnaHit: [ false ]
physics.analyzers.opdetana.AnaWaveform: [ false ]
physics.analyzers.opdetana.SaveWaveform: [ false ]
physics.analyzers.opdetana.SaveEvWaveform: [ true ]
