#include "reco_uboone_data_mcc9_8.fcl"
#include "services_microboone.fcl"
#include "opdetwaveformana.fcl"
process_name: OpDetWaveformAna

services:
{
  TFileService:            { fileName: "pmt_waveform_ana.root" }
  TimeTracker:             {}
  ExptGeoHelperInterface:         @local::microboone_geometry_helper
  Geometry:                       @local::microboone_geo
  DetectorPropertiesService:      @local::microboone_detproperties
  LArProperties:                  @local::microboone_properties
  DetectorClocksService:          @local::microboone_detectorclocks
  #MemoryTracker:           { ignoreTotal: 1 } # default is one
  RandomNumberGenerator:   {} #ART native random number generator
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
                           @table::microboone_reco_data_services
}
services.DetectorPropertiesService.NumberTimeSamples: 6400
services.DetectorPropertiesService.ReadOutWindowSize: 6400
services.DetectorClocksService.InheritClockConfig:       false
services.DetectorClocksService.TriggerOffsetTPC:         -0.400e3
#services.DatabaseUtil.ShouldConnect: false

#source is now a root file                                                                                                                                                          
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create                                                                                                                                
}

physics:
{
 ana:       [ opdetana ]
 end_paths: [ ana ]
}


physics.analyzers.opdetana: @local::OpDetWaveformAna
physics.analyzers.opdetana.HitProducer: "ophitBeam"
physics.analyzers.opdetana.InputModule: ["pmtreadout:OpdetBeamHighGain","pmtreadout:UnspecifiedLogic"]
physics.analyzers.opdetana.nchan: [ 32, 8]
physics.analyzers.opdetana.channelmask: [ 0, 3 ] # only save these elements of vector
physics.analyzers.opdetana.AnaHit: [false, true]
physics.analyzers.opdetana.AnaWaveform: [ false, false]
physics.analyzers.opdetana.SaveEvWaveform: [ true, true]
physics.analyzers.opdetana.SaveEvWaveformSum: [ true, false] # if true only the sum is saved
physics.analyzers.opdetana.SaveWaveform: [ false, false]


physics.analyzers.opdetana: @local::OpDetWaveformAna
physics.analyzers.opdetana.HitProducer: ""
physics.analyzers.opdetana.InputModule: ["pmtreadout:OpdetBeamHighGain","pmtreadout:UnspecifiedLogic"]
physics.analyzers.opdetana.nchan: [ 32, 8]
physics.analyzers.opdetana.channelmask: [ -1, 3 ] # only save these elements of vector                                                                                                        
physics.analyzers.opdetana.AnaHit: [false, false]
physics.analyzers.opdetana.AnaWaveform: [ false, false]
physics.analyzers.opdetana.SaveEvWaveform: [ true, true]
physics.analyzers.opdetana.SaveEvWaveformSum: [ true, false] # if true only the sum is saved                                                                                                 
physics.analyzers.opdetana.SaveWaveform: [ false, false]

